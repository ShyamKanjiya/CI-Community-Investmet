------------------------------------------------------------------------------------------------
Assignment 1 : Simple SQL Query with a single table with where clause
------------------------------------------------------------------------------------------------
Northwind database
Sample table :Products

-ProductID
-ProductName
-SupplierID
-CategoryID
-QuantityPerUnit
-UnitPrice
-UnitsInStock
-UnitsOnOrder
-ReorderLevel
-Discontinued

WORK : 

Create Northwind Database -

CREATE DATABASE Northwind;


Create "Products" Table -

create table Products(
	ProductID int not null,
	ProductName varchar(40) not null,
	SupplierID int not null,
	CategoryID int not null,
	QuantityParUnit varchar(20) not null,
	UnitPrice Decimal(10,4) not null,
	UnitsInStock smallint not null,
	UnitsOnOrder smallint not null,
	ReorderLevel smallint not null,
	Discontinued bit
)


Insert data into "Products" Table -

insert into Products values 
	(1, 'Chai', 1, 1, '10 boxes - 20 bags', 18.0000, 39, 0, 10, 0),
	(2, 'Chang', 1, 1, '24 - 12 oz bottles', 19.0000, 17, 40, 25, 0),
	(3, 'Aniseed Syrup', 1, 2, '12 - 550 ml bottles', 10.0000, 13, 70, 25, 0),
	(4, 'Chef Antons Cajun Seasoning', 2, 2, '48 - 6 oz jars', 22.0000, 53, 0, 0, 0),
	(5, 'Chef Antons Gumbo Mix', 2, 2, '36 boxes', 21.3500, 0, 0, 0, 1),
	(6, 'Grandmas Boysenberry Spread', 3, 2, '12 - 8 oz jars', 25.0000, 120, 0, 25, 0),
	(7, 'Uncle Bobs Organic Dried Pears', 3, 7, '12 - 1 lb pkgs', 30.0000, 15, 0, 10, 0),
	(8, 'Northwoods Cranberry Sauce', 3, 2, '12 - 12 oz jars', 40.0000, 6, 0, 0, 0),
	(9, 'Mishi Kobe Niku', 4, 6, '18 - 500 g pkgs', 97.0000, 29, 0, 0, 1),
	(10, 'Ikura', 4, 8, '12 - 200 ml jars', 31.0000, 31, 0, 0, 0),
	(11, 'Queso Cabrales', 5, 4, '1 kg pkg', 21.0000, 22, 30, 30, 0),
	(12, 'Queso Manchego La Pastora', 5, 4, '10 - 500 g pkgs', 38.0000, 86, 0, 0, 0),
	(13, 'Konbu', 6, 8, '2 kg box', 6.0000, 24, 0, 5, 0),
	(14, 'Tofu', 6, 7, '40 - 100 g pkgs', 23.2500, 35, 0, 0, 0),
	(15, 'Genen Shouyu', 6, 2, '24 - 250 ml bottles', 15.5000, 39, 0, 5, 0);



Quaries :-

Select everything from table -

select * from Products;


Write a query to get a Product list (id, name, unit price) where current products cost less than $20 -

SELECT ProductID,ProductName,UnitPrice 
FROM Products
WHERE ((UnitPrice < 20) AND (Discontinued = 0));


Write a query to get Product list (id, name, unit price) where products cost between $15 and $25 -

SELECT ProductID,ProductName,UnitPrice 
FROM Products
WHERE ((UnitPrice < 25) AND (UnitPrice > 15));


Write a query to get Product list (name, unit price) of above average price -

SELECT ProductID,ProductName,UnitPrice 
FROM Products
WHERE UnitPrice > (SELECT avg(UnitPrice) FROM Products);


Write a query to get Product list (name, unit price) of ten most expensive products -

SELECT DISTINCT ProductName AS Expensive_Products, UnitPrice 
FROM Products AS a
WHERE 10 >= (SELECT COUNT(DISTINCT UnitPrice) FROM Products AS b WHERE b.UnitPrice >= a.UnitPrice);


Write a query to count current and discontinued products -

SELECT COUNT(ProductName)
FROM Products
GROUP BY Discontinued;


Write a query to get Product list (name, units on order , units in stock) of stock is less than the quantity on order -

SELECT ProductName, UnitsOnOrder, UnitsINStock
FROM Products
WHERE ((UnitsInStock < UnitsOnOrder) AND (Discontinued = 0));
